#######################################################
#  AUTOMATION
#######################################################
- id: lockitron_status_locked
  alias: Update Lockitron Status Locked
  hide_entity: false
  trigger:
    platform: state
    entity_id: sensor.front_door_lock
    from: 'unlock'
    to: 'lock'
  action:
    - service: rest_command.update_lockitron_status_locked
    - service: tts.google_say
      entity_id: media_player.kitchen_home
      data:
        message: "Front Door is locked"
        cache: false    
- id: lockitron_status_unlocked
  alias: Update Lockitron Status Unlocked
  hide_entity: false
  trigger:
    platform: state
    entity_id: sensor.front_door_lock
    from: 'lock'
    to: 'unlock'
  action:
    - service: rest_command.update_lockitron_status_unlocked
    - service: tts.google_say
      entity_id: media_player.kitchen_home
      data:
        message: "Front Door is unlocked"
        cache: false
- id: notify_gh_about_front_door
  alias: Notify GH about Front Door
  hide_entity: false
  trigger:
    platform: state
    entity_id: sensor.front_door
  action:
    service: tts.google_say
    entity_id: media_player.kitchen_home
    data_template:
      message: "Front door is {{states('sensor.front_door')}}"
      cache: false
- id: notify_gh_about_back_door
  alias: Notify GH about Back Door
  hide_entity: false
  trigger:
    platform: state
    entity_id: sensor.back_door
  action:
    service: tts.google_say
    entity_id: media_player.kitchen_home
    data_template:
      message: "Back door is {{states('sensor.back_door')}}"
      cache: false
- id: notify_gh_about_door_to_garage
  alias: Notify GH about Door to Garage
  hide_entity: false
  trigger:
    platform: state
    entity_id: sensor.door_to_garage
  action:
    service: tts.google_say
    entity_id: media_player.kitchen_home
    data_template:
      message: "Door To The Garage is {{states('sensor.door_to_garage')}}"
      cache: false
- id: web_notify_when_garage_status_changed
  alias: Web Notify when garage open or closed.
  hide_entity: false
  trigger:
    platform: state
    entity_id: cover.garage_door
  action:
    service: notify.html5
    data:
      message: "Garage Door is {% if is_state('cover.garage_door', 'open') %}Open{% else %}Closed{% endif %}!" 
- id: movie_paused
  alias: "Movie paused"
  trigger:
    - platform: state
      entity_id: media_player.fire_tv_stick
      from: 'playing'
      to: 'paused'
  action:
    service: scene.turn_on
    entity_id: scene.theater_light_dim
- id: movie_stopped
  alias: "Movie stopped"
  trigger:
    - platform: state
      entity_id: media_player.fire_tv_stick
      to: 'idle'
  action:
    service: scene.turn_on
    entity_id: scene.theater_light_normal
- id: movie_playing
  alias: "Movie playing"
  trigger:
    - platform: state
      entity_id: media_player.fire_tv_stick
      from: 'paused'
      to: 'playing'
  action:
    service: scene.turn_on
    entity_id: scene.theater_light_off
- id: watch_movie
  alias: "Watch Movie"
  trigger:
    - platform: state
      entity_id: sensor.theater_room
      from: 'PowerOff'
      to: 'Watch Fire TV'
  action:
    service: scene.turn_on
    entity_id: scene.theater_light_off
- id: movie_theater_room_light_on
  alias: "Theater Room Light On"
  trigger:
    - platform: state
      entity_id: sensor.theater_room_motion_sensor
      to: 'active'
  condition:
    condition: state
    entity_id: sensor.theater_room
    state: 'PowerOff'
  action:
    service: light.turn_on
    entity_id: light.mqtt_theater_room_light
- id: theater_room_light_off
  alias: "Theater Room Light Off"
  trigger:
    - platform: state
      entity_id: sensor.theater_room_motion_sensor
      from: 'active'
      to: 'inactive'
    - platform: time
      # every 5 minutes
      minutes: /5
      seconds: 00
  condition:
    - condition: state
      entity_id: light.mqtt_theater_room_light
      state: 'on'
    - condition: state
      entity_id: sensor.theater_room_motion_sensor
      state: 'inactive'
  action:
    service: light.turn_off
    entity_id: light.mqtt_theater_room_light
- id: trash_day_reminder
  alias: "Trash Day Reminder"
  trigger:
    - platform: state
      entity_id: sensor.until_trash_day
      to: '1'
    - platform: time
      # Every Hour
      hours: /1
      minutes: 00
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.mqtt_dinner_table_light
        state: 'on'
      - condition: state
        entity_id: sensor.until_trash_day
        state: '1'
  action:
    - service: tts.google_say
      entity_id: media_player.kitchen_home
      data:
        message: "Trash Day is Tomorrow. Bring out the trash can!"
        cache: false